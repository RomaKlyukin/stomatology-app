# Generated by Django 4.2.25 on 2025-10-20 13:49

import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='ФИО')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='RU', verbose_name='Номер телефона')),
                ('office_number', models.CharField(max_length=10, verbose_name='Номер кабинета')),
            ],
            options={
                'verbose_name': 'Врача',
                'verbose_name_plural': 'Врачи',
                'db_table': 'doctor',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='ФИО')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='RU', verbose_name='Номер телефона')),
                ('patient_address', models.CharField(max_length=100, verbose_name='Адрес проживания')),
            ],
            options={
                'verbose_name': 'Пациента',
                'verbose_name_plural': 'Пациенты',
                'db_table': 'patient',
            },
        ),
        migrations.CreateModel(
            name='Reception',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reception', models.DateField(verbose_name='Дата')),
                ('time_reception', models.TimeField(verbose_name='Время')),
            ],
            options={
                'verbose_name': 'Прием',
                'verbose_name_plural': 'Приемы',
                'db_table': 'reception',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_week', models.PositiveIntegerField(choices=[(1, 'Понедельник'), (2, 'Вторник'), (3, 'Среда'), (4, 'Четверг'), (5, 'Пятница'), (6, 'Суббота'), (7, 'Воскресенье')], default=0, verbose_name='День недели')),
                ('start_reception', models.TimeField(verbose_name='Начало приема')),
                ('end_reception', models.TimeField(verbose_name='Конец приема')),
            ],
            options={
                'verbose_name': 'Расписание',
                'verbose_name_plural': 'Расписание работы врачей',
                'db_table': 'shedule',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=50, verbose_name='Услуга')),
                ('cost', models.FloatField(verbose_name='Стоимость')),
            ],
            options={
                'verbose_name': 'Услугу',
                'verbose_name_plural': 'Услуги',
                'db_table': 'service',
            },
        ),
        migrations.CreateModel(
            name='Service_rendered',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Количество')),
                ('number_reception', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='stomatology.reception', verbose_name='Прием')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='stomatology.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Оказанную услугу',
                'verbose_name_plural': 'Оказанные услуги',
                'db_table': 'service_rendered',
                'ordering': ['-id'],
            },
        ),
        migrations.AddIndex(
            model_name='service',
            index=django.contrib.postgres.indexes.GinIndex(fields=['service_name', 'cost'], name='service_service_11df0f_gin'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='doctor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='stomatology.doctor', verbose_name='Врач'),
        ),
        migrations.AddField(
            model_name='reception',
            name='doctor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='stomatology.doctor', verbose_name='Врач'),
        ),
        migrations.AddField(
            model_name='reception',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='stomatology.patient', verbose_name='Пациент'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=django.contrib.postgres.indexes.GinIndex(fields=['full_name', 'phone_number', 'patient_address'], name='patient_full_na_4a4a56_gin'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=django.contrib.postgres.indexes.GinIndex(fields=['full_name', 'phone_number', 'office_number'], name='doctor_full_na_2d6d79_gin'),
        ),
        migrations.AddIndex(
            model_name='service_rendered',
            index=django.contrib.postgres.indexes.GinIndex(fields=['service', 'number_reception', 'quantity'], name='service_ren_service_c09abe_gin'),
        ),
        migrations.AddIndex(
            model_name='schedule',
            index=django.contrib.postgres.indexes.GinIndex(fields=['doctor', 'day_week', 'start_reception', 'end_reception'], name='shedule_doctor__faff13_gin'),
        ),
        migrations.AddIndex(
            model_name='reception',
            index=django.contrib.postgres.indexes.GinIndex(fields=['date_reception', 'time_reception', 'patient', 'doctor'], name='reception_date_re_6f0e65_gin'),
        ),
    ]
