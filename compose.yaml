services:
  nginx:
    image: nginx
    container_name: nginx-server
    restart: always
    networks:
      - dbnet
    expose:
      - 8088
    ports:
      - "80:8088"
    volumes:
      - ./stomatology/static:/app/www/stomatology/static
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - stomatology
  stomatology:
    build: ./stomatology
    image: stomatology
    container_name: stomatology
    restart: always
    command: "gunicorn -c gunicorn.py app.wsgi"
    env_file:
      - .env
    links:
      - "postgres:dbps"
    networks:
      - dbnet
    volumes:
      - ./stomatology:/app/www/stomatology
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"
    links:
      - "postgres:db"
    networks:
      - dbnet
    depends_on:
      - postgres
  postgres:
    image: postgres:17-alpine
    container_name: psgr
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dbnet

networks:
  dbnet:
    driver: bridge

volumes:
  postgres-data: